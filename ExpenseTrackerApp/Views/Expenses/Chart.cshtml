@{
    ViewData["Title"] = "Expense Chart";
    var chartData = (IEnumerable<dynamic>)ViewBag.ChartData;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold">📊 Expenses by Category</h2>
        <a asp-action="Index" class="btn btn-secondary">← Back to List</a>
    </div>

    <!-- Filter options -->
    <div class="mb-3">
        <form method="get" asp-action="Chart" class="form-inline">
            <label for="filter" class="form-label me-2">Filter:</label>
            <select id="filter" name="filter" class="form-select d-inline w-auto">
                <option value="all">All Time</option>
                <option value="monthly">This Month</option>
                <option value="yearly">This Year</option>
            </select>
            <button type="submit" class="btn btn-sm btn-outline-primary ms-2">Apply</button>
        </form>
    </div>

    <div class="card p-4 shadow-sm">
        <canvas id="expenseChart" height="100"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('expenseChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(chartData.Select(c => c.Category))),
                datasets: [{
                    data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(chartData.Select(c => c.Total))),
                    backgroundColor: [
                        '#4e73df', '#1cc88a', '#36b9cc',
                        '#f6c23e', '#e74a3b', '#8e44ad', '#2ecc71'
                    ]
                }]
            },
            options: {
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    </script>
}
